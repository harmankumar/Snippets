Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.


##### Solution ###############

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head)
        {
            return head;
        }
        ListNode* head1 = head;
        while(head1->next != NULL)
        {
            while(1)
            {
                if(head1->next == NULL)
                {
                    break;
                }
                if(head1->val == (head1->next)->val)
                {
                    head1->next = (head1->next)->next;
                }
                else
                {
                    head1 = head1->next;
                    break;
                }
            }
        }
        return head;
    }
};